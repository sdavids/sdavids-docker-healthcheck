---
# SPDX-FileCopyrightText: Â© 2024 Sebastian Davids <sdavids@gmx.de>
# SPDX-License-Identifier: Apache-2.0

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
name: ci
on: # yamllint disable-line rule:truthy
  push:
    branches:
      - main
      - next
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  CARGO_INCREMENTAL: 0
permissions: { }
jobs:
  # unfortunately each job is billed for at least 1 minute in GH Actions
  # so use one big one to save GH Action minutes
  # https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions
  lint-build-test:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - name: Checkout
        # https://github.com/actions/checkout/releases
        uses: actions/checkout@v4.2.2
      - name: Classify changes
        # https://github.com/dorny/paths-filter/releases
        uses: dorny/paths-filter@v3.0.2
        id: changes
        with:
          filters: |
            sh:
              - '**.sh'
            yaml:
              - '**.yaml'
            rust-http-Dockerfile:
              - .hadolint.yaml
              - rust/http/Dockerfile
            rust-http:
              - 'rust/http/src/**'
              - 'rust/http/tests/**'
              - rust/http/Cargo.lock
              - rust/http/Cargo.toml
              - rust/http/rust-toolchain.toml
            rust-https-Dockerfile:
              - .hadolint.yaml
              - rust/https/Dockerfile
            rust-https:
              - 'rust/https/src/**'
              - 'rust/https/tests/**'
              - rust/https/Cargo.lock
              - rust/https/Cargo.toml
              - rust/https/rust-toolchain.toml
      - if: steps.changes.outputs.sh == 'true'
        name: Lint shell scripts
        run: scripts/shellscript_check.sh
      - if: steps.changes.outputs.yaml == 'true'
        name: Lint YAML files
        run: yamllint --strict .
      # --- rust/http ------------------------------------------------------
      - if: steps.changes.outputs.rust-http-Dockerfile == 'true'
        name: Lint rust/http Dockerfile
        # https://github.com/hadolint/hadolint-action/releases
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: rust/http/Dockerfile
      - if: steps.changes.outputs.rust-http == 'true'
        name: Install rust/http Rust
        working-directory: rust/http
        run: rustup show
      - if: steps.changes.outputs.rust-http == 'true'
        name: Cache rust/http Rust files
        # https://github.com/Swatinem/rust-cache/releases
        uses: Swatinem/rust-cache@v2.7.5
        with:
          shared-key: rust-http
          workspaces: rust/http
      - if: steps.changes.outputs.rust-http == 'true'
        name: Check rust/http formatting
        working-directory: rust/http
        run: scripts/format_check.sh
      - if: steps.changes.outputs.rust-http == 'true'
        name: Lint rust/http files
        working-directory: rust/http
        run: scripts/lint.sh
      - if: steps.changes.outputs.rust-http == 'true'
        name: Test rust/http
        working-directory: rust/http
        run: cargo test --no-fail-fast
      - if: steps.changes.outputs.rust-http == 'true'
        name: Build rust/http
        working-directory: rust/http
        run: scripts/build_release.sh
      # --- rust/https -----------------------------------------------------
      - if: steps.changes.outputs.rust-https-Dockerfile == 'true'
        name: Lint rust/https Dockerfile
        # https://github.com/hadolint/hadolint-action/releases
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: rust/https/Dockerfile
      - if: steps.changes.outputs.rust-https == 'true'
        name: Install rust/https Rust
        working-directory: rust/https
        run: rustup show
      - if: steps.changes.outputs.rust-https == 'true'
        name: Cache rust/https Rust files
        # https://github.com/Swatinem/rust-cache/releases
        uses: Swatinem/rust-cache@v2.7.5
        with:
          shared-key: rust-https
          workspaces: rust/https
      - if: steps.changes.outputs.rust-https == 'true'
        name: Check rust/https formatting
        working-directory: rust/https
        run: scripts/format_check.sh
      - if: steps.changes.outputs.rust-https == 'true'
        name: Lint rust/https files
        working-directory: rust/https
        run: scripts/lint.sh
      - if: steps.changes.outputs.rust-https == 'true'
        name: Test rust/https
        working-directory: rust/https
        run: cargo test --no-fail-fast
      - if: steps.changes.outputs.rust-https == 'true'
        name: Build rust/https
        working-directory: rust/https
        run: scripts/build_release.sh
